[{"F:\\web\\react\\codeforces-api\\src\\index.js":"1","F:\\web\\react\\codeforces-api\\src\\App.js":"2","F:\\web\\react\\codeforces-api\\src\\reportWebVitals.js":"3","F:\\web\\react\\codeforces-api\\src\\data\\store.js":"4","F:\\web\\react\\codeforces-api\\src\\components\\Card.js":"5","F:\\web\\react\\codeforces-api\\src\\data\\reducers\\fetchReducers.js":"6","F:\\web\\react\\codeforces-api\\src\\data\\actions\\types.js":"7","F:\\web\\react\\codeforces-api\\src\\data\\actions\\fetchActions.js":"8","F:\\web\\react\\codeforces-api\\src\\components\\Menu.js":"9","F:\\web\\react\\codeforces-api\\src\\util\\sortMethods.js":"10","F:\\web\\react\\codeforces-api\\src\\util\\bashforces.js":"11","F:\\web\\react\\codeforces-api\\src\\util\\constants.js":"12","F:\\web\\react\\codeforces-api\\src\\components\\problem\\ProblemPage.js":"13","F:\\web\\react\\codeforces-api\\src\\components\\contest\\ContestPage.js":"14","F:\\web\\react\\codeforces-api\\src\\components\\contest\\ContestList.js":"15","F:\\web\\react\\codeforces-api\\src\\components\\Pagination.js":"16","F:\\web\\react\\codeforces-api\\src\\components\\problem\\ProblemList.js":"17","F:\\web\\react\\codeforces-api\\src\\data\\reducers\\userReducers.js":"18"},{"size":806,"mtime":1613735479823,"results":"19","hashOfConfig":"20"},{"size":1126,"mtime":1614508401073,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":2955,"mtime":1614517858247,"results":"23","hashOfConfig":"20"},{"size":940,"mtime":1613975766605,"results":"24","hashOfConfig":"20"},{"size":1772,"mtime":1614517761826,"results":"25","hashOfConfig":"20"},{"size":856,"mtime":1614517273035,"results":"26","hashOfConfig":"20"},{"size":4653,"mtime":1614239939205,"results":"27","hashOfConfig":"20"},{"size":2462,"mtime":1614508287585,"results":"28","hashOfConfig":"20"},{"size":487,"mtime":1613730924343,"results":"29","hashOfConfig":"20"},{"size":733,"mtime":1614237850708,"results":"30","hashOfConfig":"20"},{"size":306,"mtime":1614517891347,"results":"31","hashOfConfig":"20"},{"size":16193,"mtime":1614600623882,"results":"32","hashOfConfig":"20"},{"size":12096,"mtime":1614599898624,"results":"33","hashOfConfig":"20"},{"size":4046,"mtime":1614598514202,"results":"34","hashOfConfig":"20"},{"size":1619,"mtime":1614336963904,"results":"35","hashOfConfig":"20"},{"size":1630,"mtime":1614517972328,"results":"36","hashOfConfig":"20"},{"size":2611,"mtime":1614599356359,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1pnglh",{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\web\\react\\codeforces-api\\src\\index.js",[],["83","84"],"F:\\web\\react\\codeforces-api\\src\\App.js",["85","86","87","88","89","90","91","92"],"import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"./components/Card\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  fetchContestList,\n  fetchProblemList,\n  fetchUserSubmissions,\n} from \"./data/actions/fetchActions\";\n\nimport Menu, { CONTEST, PROBLEMS } from \"./components/Menu\";\nimport ProblemPage from \"./components/problem/ProblemPage\";\nimport ContestPage from \"./components/contest/ContestPage\";\n\nfunction App(props) {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // fetchProblemList(dispatch);\n    // fetchContestList(dispatch);\n  }, []);\n\n  return (\n    <div className=\"App container-fluid bg-dark\">\n      <div className=\"menu\">\n        <Menu />\n      </div>\n\n      <Switch>\n        <Route path={PROBLEMS} component={ProblemPage} />\n        <Route strict path={CONTEST} component={ContestPage}/>\n\n      </Switch>\n      <footer className=\"text-light d-flex justify-content-center p-3\">\n        All rights reserved by @Bashem\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","F:\\web\\react\\codeforces-api\\src\\reportWebVitals.js",[],"F:\\web\\react\\codeforces-api\\src\\data\\store.js",["93","94"],"import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport {\r\n  problemListReducer,\r\n  contestReducer,\r\n} from \"./reducers/fetchReducers\";\r\nimport { userSubmissionsReducer,userReducer } from \"./reducers/userReducers\";\r\n\r\nexport const contestList = {\r\n  status: \"OK\",\r\n  result: [\r\n    {\r\n      id: 1476,\r\n      name: \"Educational Codeforces Round 103 (Rated for Div. 2)\",\r\n      type: \"ICPC\",\r\n      phase: \"FINISHED\",\r\n      frozen: false,\r\n      durationSeconds: 7200,\r\n      startTimeSeconds: 1611930900,\r\n      relativeTimeSeconds: 418636,\r\n    },\r\n  ],\r\n};\r\n\r\nconst problem = {\r\n  status: \"OK\",\r\n  result: {\r\n    problems: [\r\n      {\r\n        contestId: 1478,\r\n        index: \"C\",\r\n        name: \"Nezzar and Symmetric Array\",\r\n        type: \"PROGRAMMING\",\r\n        points: 1500,\r\n        rating: 1700,\r\n        tags: [\"implementation\", \"math\", \"sortings\"],\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst submissions = {\r\n  status: \"OK\",\r\n  result: [\r\n    {\r\n      id: 105129023,\r\n      contestId: 1368,\r\n      creationTimeSeconds: 1611387508,\r\n      relativeTimeSeconds: 2147483647,\r\n      problem: {\r\n        contestId: 1368,\r\n        index: \"D\",\r\n        name: \"AND, OR and square sum\",\r\n        type: \"PROGRAMMING\",\r\n        points: 1750,\r\n        rating: 1700,\r\n        tags: [\"bitmasks\", \"greedy\", \"math\"],\r\n      },\r\n      author: {\r\n        contestId: 1368,\r\n        members: [{ handle: \"bashem\" }],\r\n        participantType: \"PRACTICE\",\r\n        ghost: false,\r\n        startTimeSeconds: 1592491500,\r\n      },\r\n      programmingLanguage: \"GNU C++14\",\r\n      verdict: \"OK\",\r\n      testset: \"TESTS\",\r\n      passedTestCount: 17,\r\n      timeConsumedMillis: 109,\r\n      memoryConsumedBytes: 1638400,\r\n    },\r\n  ],\r\n};\r\n\r\nconst middlewre = [thunk, logger];\r\n\r\nconst combinedReducers = combineReducers({\r\n  userSubmissions: userSubmissionsReducer,\r\n  problemList: problemListReducer,\r\n  contestList: contestReducer,\r\n  userList: userReducer,\r\n});\r\n\r\nconst newCombinedReducers = (state, action) => {\r\n  const intermediateReducer = combinedReducers(state, action);\r\n  //console.log(intermediateReducer.problemList);\r\n\r\n  return {\r\n    userSubmissions: intermediateReducer.userSubmissions,\r\n    problemList: {\r\n      problems: intermediateReducer.problemList.problems,\r\n      error: intermediateReducer.problemList.error,\r\n      tags: intermediateReducer.problemList.tags,\r\n      loading: intermediateReducer.problemList.loading,\r\n    },\r\n    contestList: {\r\n      contests: intermediateReducer.contestList.contests,\r\n      error: intermediateReducer.contestList.error,\r\n      loading: intermediateReducer.contestList.loading,\r\n      problems: intermediateReducer.problemList.problems,\r\n    },\r\n    userList: intermediateReducer.userList,\r\n  };\r\n};\r\n\r\nconst store = createStore(\r\n  newCombinedReducers,\r\n  {},\r\n  applyMiddleware(...middlewre)\r\n);\r\n\r\nexport default store;\r\n","F:\\web\\react\\codeforces-api\\src\\components\\Card.js",["95"],"import React, { useEffect, useState } from \"react\";\r\n\r\nexport function IndividualProblem(params) {}\r\n\r\nfunction Card(id, name) {\r\n  const [solveCount, setSolveCount] = useState(0);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div className=\"card bg-light\" key={id}>\r\n      <h3 className=\"text-secondary\">\r\n        {id} , {name} , {solveCount}\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function contestCard(contest) {\r\n  \r\n}\r\n\r\nexport function problemCard(problem) {\r\n  return (\r\n    <div className=\"card bg-dark\" key={problem.id}>\r\n      <div className=\"card-header d-flex justify-content-between text-light\">\r\n        <div className=\"id font-weight-bold\">\r\n          {problem.id}\r\n        </div>\r\n        <div className=\"name\">{problem.name}</div>\r\n        <div className=\"rating\">{problem.rating}</div>\r\n\r\n        <div className=\"solvedCount\">{problem.solvedCount}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","F:\\web\\react\\codeforces-api\\src\\data\\reducers\\fetchReducers.js",["96","97","98","99"],"import { sortByContestId } from \"../../util/sortMethods\";\r\nimport {\r\n  ERROR_FETCHING,\r\n  ERROR_FETCHING_CONTEST_LIST,\r\n  ERROR_FETCHING_PROBLEMS,\r\n  ERROR_FETCHING_USER_SUBMISSIONS,\r\n  FETCH_CONTEST_LIST,\r\n  FETCH_PROBLEM_LIST,\r\n  FETCH_USER_SUBMISSIONS,\r\n  LOADING_CONTEST_LIST,\r\n  LOADING_PROBLEM_LIST,\r\n  LOADING_USER_SUBMISSIONS,\r\n} from \"../actions/types\";\r\n\r\nconst problemListInitialState = {\r\n  problems: [],\r\n  error: \"\",\r\n  tags: new Set(),\r\n  loading: false,\r\n};\r\n\r\nexport const problemListReducer = (\r\n  initState = problemListInitialState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case FETCH_PROBLEM_LIST:\r\n      action.payload.sort(sortByContestId);\r\n      let tags = new Set();\r\n\r\n      for (let problem of action.payload)\r\n        for (let tag of problem.tags) tags.add(tag);\r\n\r\n      return {\r\n        ...problemListInitialState,\r\n        problems: action.payload,\r\n        error: \"\",\r\n        tags: tags,\r\n      };\r\n    case ERROR_FETCHING_PROBLEMS:\r\n      return { ...problemListInitialState, error: action.payload };\r\n    case LOADING_PROBLEM_LIST:\r\n      return { ...problemListInitialState, loading: true };\r\n    default:\r\n      return initState;\r\n  }\r\n};\r\n\r\nconst contestListInitialState = { contests: [], error: \"\", loading: false };\r\n\r\nexport const contestReducer = (initState = contestListInitialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CONTEST_LIST:\r\n      return {\r\n        ...contestListInitialState,\r\n        ...{ contests: action.payload, error: \"\" },\r\n      };\r\n    case ERROR_FETCHING_CONTEST_LIST:\r\n      return { ...contestListInitialState, error: action.payload };\r\n    case LOADING_CONTEST_LIST:\r\n      return { ...contestListInitialState, loading: true };\r\n    default:\r\n      return initState;\r\n  }\r\n};\r\n","F:\\web\\react\\codeforces-api\\src\\data\\actions\\types.js",[],"F:\\web\\react\\codeforces-api\\src\\data\\actions\\fetchActions.js",["100","101","102","103","104"],"// import { FETCH_POSTS, NEW_POST } from './types';\r\n\r\nimport {\r\n  ERROR_FETCHING,\r\n  ERROR_FETCHING_CONTEST_LIST,\r\n  ERROR_FETCHING_PROBLEMS,\r\n  ERROR_FETCHING_USER_SUBMISSIONS,\r\n  FETCH_CONTEST_LIST,\r\n  FETCH_PROBLEM_LIST,\r\n  FETCH_USER_SUBMISSIONS,\r\n  FINISHED,\r\n  LOADING_CONTEST_LIST,\r\n  LOADING_PROBLEM_LIST,\r\n  LOADING_USER_SUBMISSIONS,\r\n} from \"./types\";\r\nimport store from \"../store\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst allContest = \"https://codeforces.com/api/contest.list\";\r\nlet id = 5,\r\n  user = \"h\";\r\nconst individualContestURL =\r\n  \"https://codeforces.com/api/contest.status?contestId=\" +\r\n  id +\r\n  \"&handle=\" +\r\n  user;\r\nlet contestId = 5;\r\nconst path = \"https://codeforces.com/contest/\" + contestId;\r\nconst problemSet = \"https://codeforces.com/api/problemset.problems\";\r\nconst userStatus = \"https://codeforces.com/api/user.status?handle=bashem\";\r\n\r\nconst errorFecthing = (type, message) => {\r\n  return {\r\n    type: type,\r\n    payload: message,\r\n  };\r\n};\r\n\r\nconst load = (type) => {\r\n  return {type: type}\r\n};\r\n\r\nexport const fetchUserSubmissions = (dispatch) => {\r\n  dispatch(load(LOADING_USER_SUBMISSIONS));\r\n  fetch(userStatus)\r\n    .then((res) => res.json())\r\n    .then(\r\n      (result) => {\r\n        if (result.status !== \"OK\")\r\n          return errorFecthing(\r\n            ERROR_FETCHING_USER_SUBMISSIONS,\r\n            \"Status Failed\"\r\n          );\r\n        console.log(result);\r\n        return dispatch({\r\n          type: FETCH_USER_SUBMISSIONS,\r\n          payload: result.result,\r\n        });\r\n      },\r\n      // Note: it's important to handle errors here\r\n      // instead of a catch() block so that we don't swallow\r\n      // exceptions from actual bugs in components.\r\n      (error) => {\r\n        return dispatch(\r\n          errorFecthing(\r\n            ERROR_FETCHING_USER_SUBMISSIONS,\r\n            \"ERROR in User Submission\" + error\r\n          )\r\n        );\r\n      }\r\n    )\r\n    .catch((e) => {\r\n      // console.log(e);\r\n      return dispatch(\r\n        errorFecthing(\r\n          ERROR_FETCHING_USER_SUBMISSIONS,\r\n          \"ERROR in User Submission\" + e\r\n        )\r\n      );\r\n    });\r\n};\r\n\r\nexport const fetchProblemList = (dispatch) => {\r\n  dispatch(load(LOADING_PROBLEM_LIST));\r\n  fetch(problemSet)\r\n    .then((res) => res.json())\r\n    .then(\r\n      (result) => {\r\n        if (result.status !== \"OK\")\r\n          return dispatch(\r\n            errorFecthing(ERROR_FETCHING_PROBLEMS, \"Problem Status Failed\")\r\n          );\r\n        //   console.log(result);\r\n        let problems = result.result.problems;\r\n        problems = problems.filter((problem) => (\"contestId\" in problem));\r\n        console.log(result.result);\r\n        for (let i = 0; i < result.result.problemStatistics.length; i++) {\r\n          if (!(\"rating\" in problems[i])) problems[i][\"rating\"] = -1;\r\n          problems[i][\"solvedCount\"] =\r\n            result.result.problemStatistics[i].solvedCount;\r\n          problems[i][\"id\"] = problems[i].contestId.toString()+problems[i].index;\r\n        }\r\n\r\n\r\n        return dispatch({\r\n          type: FETCH_PROBLEM_LIST,\r\n          payload: problems,\r\n        });\r\n        //\tconsole.log(result.result.length)\r\n      },\r\n      // Note: it's important to handle errors here\r\n      // instead of a catch() block so that we don't swallow\r\n      // exceptions from actual bugs in components.\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    )\r\n    .catch((e) => {\r\n      //  console.log(e);\r\n      return dispatch(\r\n        errorFecthing(ERROR_FETCHING_PROBLEMS, \"ERROR in PROBLEM LIST\")\r\n      );\r\n    });\r\n};\r\n\r\nexport const fetchContestList = (dispatch) => {\r\n  dispatch(load(LOADING_CONTEST_LIST));\r\n  fetch(allContest)\r\n    .then((res) => res.json())\r\n    .then(\r\n      (result) => {\r\n        if (result.status !== \"OK\")\r\n          return dispatch(\r\n            errorFecthing(\r\n              ERROR_FETCHING_CONTEST_LIST,\r\n              \"FAiled to fethc contestList\"\r\n            )\r\n          );\r\n        let res = result.result.filter((contest) => contest.phase === FINISHED);\r\n\r\n        return dispatch({\r\n          type: FETCH_CONTEST_LIST,\r\n          payload: res,\r\n        });\r\n        //\tconsole.log(result.result.length)\r\n      },\r\n      // Note: it's important to handle errors here\r\n      // instead of a catch() block so that we don't swallow\r\n      // exceptions from actual bugs in components.\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    )\r\n    .catch((e) => {\r\n      //  console.log(e);\r\n      return dispatch(\r\n        errorFecthing(\r\n          ERROR_FETCHING_CONTEST_LIST,\r\n          \"FAiled to fethc contestList\"\r\n        )\r\n      );\r\n    });\r\n};\r\n","F:\\web\\react\\codeforces-api\\src\\components\\Menu.js",["105","106","107"],"import { faSync } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  fetchContestList,\r\n  fetchProblemList,\r\n  fetchUserSubmissions,\r\n} from \"../data/actions/fetchActions\";\r\n\r\nexport const PROBLEMS = \"/problems\";\r\nexport const CONTEST = \"/contests\";\r\n\r\nconst Menu = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const sync = () => {\r\n    fetchProblemList(dispatch);\r\n    fetchUserSubmissions(dispatch);\r\n    fetchContestList(dispatch);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light p-2\">\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarTogglerDemo03\"\r\n        aria-controls=\"navbarTogglerDemo03\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <Link to=\"/\" className=\"navbar-brand\" href=\"#\">\r\n        BashForces\r\n      </Link>\r\n\r\n      <div\r\n        className=\"collapse navbar-collapse d-flex justify-content-end\"\r\n        id=\"navbarTogglerDemo03\">\r\n        <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\r\n          <li className=\"nav-item active\">\r\n            <a\r\n              className=\"nav-link\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                sync();\r\n              }} href=\"#\">\r\n              <FontAwesomeIcon icon={faSync} />\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item active\">\r\n            <Link to={PROBLEMS} className=\"nav-link\" href=\"#\">\r\n              Problem List\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to={CONTEST} className=\"nav-link\" href=\"#\">\r\n              Contest\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <form className=\"form-inline d-flex my-2 my-lg-0\">\r\n          <input\r\n            className=\"form-control mr-sm-2\"\r\n            type=\"search\"\r\n            placeholder=\"Handle\"\r\n            aria-label=\"Search\"\r\n          />\r\n          <button\r\n            className=\"btn btn-outline-success my-2 my-sm-0\"\r\n            type=\"submit\">\r\n            Enter\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","F:\\web\\react\\codeforces-api\\src\\util\\sortMethods.js",[],"F:\\web\\react\\codeforces-api\\src\\util\\bashforces.js",[],"F:\\web\\react\\codeforces-api\\src\\util\\constants.js",[],"F:\\web\\react\\codeforces-api\\src\\components\\problem\\ProblemPage.js",["108","109","110","111","112","113"],"F:\\web\\react\\codeforces-api\\src\\components\\contest\\ContestPage.js",["114","115","116","117","118","119","120","121","122","123","124","125"],"F:\\web\\react\\codeforces-api\\src\\components\\contest\\ContestList.js",["126","127","128","129","130"],"F:\\web\\react\\codeforces-api\\src\\components\\Pagination.js",["131"],"import react from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pagination = (props) => {\r\n  let linkClassName = \"page-link text-light bg-dark\";\r\n  let linkWrapperClassName = \"page-item\";\r\n\r\n  let pageCount =\r\n    props.perPage > 0\r\n      ? Math.floor(\r\n          (parseInt(props.totalCount) + parseInt(props.perPage) - 1) /\r\n            parseInt(props.perPage)\r\n        )\r\n      : 0;\r\n\r\n  return (\r\n    <nav aria-label=\"Page navigation example\">\r\n      <ReactPaginate\r\n        previousLabel={\"previous\"}\r\n        nextLabel={\"next\"}\r\n        breakLabel={\"...\"}\r\n        breakClassName={\"break-me\"}\r\n        pageCount={props.perPage > 0 ? pageCount : 0}\r\n        marginPagesDisplayed={2}\r\n        pageRangeDisplayed={5}\r\n        nextClassName={linkWrapperClassName}\r\n        initialPage={props.selected}\r\n        forcePage={props.selected}\r\n        pageClassName={linkWrapperClassName}\r\n        previousClassName={linkWrapperClassName}\r\n        pageLinkClassName={linkClassName}\r\n        nextLinkClassName={linkClassName}\r\n        previousLinkClassName={linkClassName}\r\n        onPageChange={(e) => props.pageSelected(e.selected)}\r\n        containerClassName={\"pagination text-light justify-content-center\"}\r\n        subContainerClassName={\"pages pagination\"}\r\n        activeClassName={\"active border-success\"}\r\n      />\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  perPage: PropTypes.number.isRequired,\r\n  selected: PropTypes.number.isRequired,\r\n  pageSelected: PropTypes.func,\r\n  totalCount: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","F:\\web\\react\\codeforces-api\\src\\components\\problem\\ProblemList.js",["132","133","134"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getProblemUrl } from \"../../util/bashforces\";\r\nimport {\r\n  ATTEMPTED_PROBLEMS,\r\n  SOLVED_PROBLEMS,\r\n} from \"../../util/constants\";\r\n\r\nconst ProblemList = (props) => {\r\n  const state = useSelector((state) => state);\r\n\r\n  const getState = (problem) => {\r\n    if (state.userSubmissions[SOLVED_PROBLEMS].has(problem.id))\r\n      return SOLVED_PROBLEMS;\r\n    if (state.userSubmissions[ATTEMPTED_PROBLEMS].has(problem.id))\r\n      return ATTEMPTED_PROBLEMS;\r\n    return \"UNSOLVED\";\r\n  };\r\n\r\n  const ProblemCard = (problem) => {\r\n    let classes = \"bg-dark\";\r\n    let problemState = getState(problem);\r\n    if (problemState === SOLVED_PROBLEMS) classes = \"bg-success\";\r\n    else if (problemState === ATTEMPTED_PROBLEMS) classes = \"bg-danger\";\r\n    return (\r\n      <tr key={problem.id}>\r\n        <td className={\"id font-weight-bold \" + classes}>{problem.id}</td>\r\n        <td className={\"name \" + classes}>\r\n          <a\r\n            className=\"text-light text-decoration-none\"\r\n            target=\"_blank\"\r\n            title={problem.tags}\r\n            href={getProblemUrl(problem.contestId, problem.index)}>\r\n            {problem.name}\r\n          </a>\r\n        </td>\r\n        <td className={\"rating \" + classes}>{problem.rating}</td>\r\n\r\n        <td className={\"solvedCount \" + classes}>{problem.solvedCount}</td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.problems.map((problem) => {\r\n        return ProblemCard(problem);\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProblemList;\r\n","F:\\web\\react\\codeforces-api\\src\\data\\reducers\\userReducers.js",["135","136"],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":2,"column":28,"nodeType":"143","messageId":"144","endLine":2,"endColumn":36},{"ruleId":"141","severity":1,"message":"145","line":3,"column":8,"nodeType":"143","messageId":"144","endLine":3,"endColumn":12},{"ruleId":"141","severity":1,"message":"146","line":4,"column":27,"nodeType":"143","messageId":"144","endLine":4,"endColumn":33},{"ruleId":"141","severity":1,"message":"147","line":4,"column":50,"nodeType":"143","messageId":"144","endLine":4,"endColumn":54},{"ruleId":"141","severity":1,"message":"148","line":7,"column":3,"nodeType":"143","messageId":"144","endLine":7,"endColumn":19},{"ruleId":"141","severity":1,"message":"149","line":8,"column":3,"nodeType":"143","messageId":"144","endLine":8,"endColumn":19},{"ruleId":"141","severity":1,"message":"150","line":9,"column":3,"nodeType":"143","messageId":"144","endLine":9,"endColumn":23},{"ruleId":"141","severity":1,"message":"151","line":17,"column":9,"nodeType":"143","messageId":"144","endLine":17,"endColumn":17},{"ruleId":"141","severity":1,"message":"152","line":26,"column":7,"nodeType":"143","messageId":"144","endLine":26,"endColumn":14},{"ruleId":"141","severity":1,"message":"153","line":43,"column":7,"nodeType":"143","messageId":"144","endLine":43,"endColumn":18},{"ruleId":"141","severity":1,"message":"154","line":6,"column":22,"nodeType":"143","messageId":"144","endLine":6,"endColumn":35},{"ruleId":"141","severity":1,"message":"155","line":3,"column":3,"nodeType":"143","messageId":"144","endLine":3,"endColumn":17},{"ruleId":"141","severity":1,"message":"156","line":6,"column":3,"nodeType":"143","messageId":"144","endLine":6,"endColumn":34},{"ruleId":"141","severity":1,"message":"157","line":9,"column":3,"nodeType":"143","messageId":"144","endLine":9,"endColumn":25},{"ruleId":"141","severity":1,"message":"158","line":12,"column":3,"nodeType":"143","messageId":"144","endLine":12,"endColumn":27},{"ruleId":"141","severity":1,"message":"155","line":4,"column":3,"nodeType":"143","messageId":"144","endLine":4,"endColumn":17},{"ruleId":"141","severity":1,"message":"159","line":16,"column":8,"nodeType":"143","messageId":"144","endLine":16,"endColumn":13},{"ruleId":"141","severity":1,"message":"160","line":18,"column":10,"nodeType":"143","messageId":"144","endLine":18,"endColumn":21},{"ruleId":"141","severity":1,"message":"161","line":23,"column":7,"nodeType":"143","messageId":"144","endLine":23,"endColumn":27},{"ruleId":"141","severity":1,"message":"162","line":29,"column":7,"nodeType":"143","messageId":"144","endLine":29,"endColumn":11},{"ruleId":"141","severity":1,"message":"163","line":3,"column":17,"nodeType":"143","messageId":"144","endLine":3,"endColumn":26},{"ruleId":"141","severity":1,"message":"142","line":3,"column":28,"nodeType":"143","messageId":"144","endLine":3,"endColumn":36},{"ruleId":"164","severity":1,"message":"165","line":45,"column":13,"nodeType":"166","endLine":50,"endColumn":27},{"ruleId":"167","severity":1,"message":"168","line":88,"column":29,"nodeType":"169","messageId":"170","endLine":88,"endColumn":31},{"ruleId":"171","severity":1,"message":"172","line":97,"column":6,"nodeType":"173","endLine":97,"endColumn":26,"suggestions":"174"},{"ruleId":"167","severity":1,"message":"175","line":278,"column":37,"nodeType":"169","messageId":"170","endLine":278,"endColumn":39},{"ruleId":"167","severity":1,"message":"168","line":284,"column":35,"nodeType":"169","messageId":"170","endLine":284,"endColumn":37},{"ruleId":"167","severity":1,"message":"168","line":286,"column":38,"nodeType":"169","messageId":"170","endLine":286,"endColumn":40},{"ruleId":"176","severity":1,"message":"177","line":328,"column":29,"nodeType":"178","endLine":336,"endColumn":30},{"ruleId":"141","severity":1,"message":"179","line":4,"column":3,"nodeType":"143","messageId":"144","endLine":4,"endColumn":16},{"ruleId":"141","severity":1,"message":"180","line":5,"column":3,"nodeType":"143","messageId":"144","endLine":5,"endColumn":14},{"ruleId":"141","severity":1,"message":"181","line":6,"column":3,"nodeType":"143","messageId":"144","endLine":6,"endColumn":10},{"ruleId":"141","severity":1,"message":"182","line":8,"column":3,"nodeType":"143","messageId":"144","endLine":8,"endColumn":16},{"ruleId":"141","severity":1,"message":"183","line":11,"column":8,"nodeType":"143","messageId":"144","endLine":11,"endColumn":21},{"ruleId":"141","severity":1,"message":"184","line":15,"column":3,"nodeType":"143","messageId":"144","endLine":15,"endColumn":21},{"ruleId":"141","severity":1,"message":"185","line":17,"column":3,"nodeType":"143","messageId":"144","endLine":17,"endColumn":18},{"ruleId":"141","severity":1,"message":"186","line":27,"column":10,"nodeType":"143","messageId":"144","endLine":27,"endColumn":13},{"ruleId":"171","severity":1,"message":"187","line":83,"column":6,"nodeType":"173","endLine":83,"endColumn":26,"suggestions":"188"},{"ruleId":"167","severity":1,"message":"175","line":250,"column":41,"nodeType":"169","messageId":"170","endLine":250,"endColumn":43},{"ruleId":"167","severity":1,"message":"168","line":256,"column":39,"nodeType":"169","messageId":"170","endLine":256,"endColumn":41},{"ruleId":"167","severity":1,"message":"168","line":258,"column":42,"nodeType":"169","messageId":"170","endLine":258,"endColumn":44},{"ruleId":"141","severity":1,"message":"163","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":26},{"ruleId":"141","severity":1,"message":"142","line":1,"column":28,"nodeType":"143","messageId":"144","endLine":1,"endColumn":36},{"ruleId":"141","severity":1,"message":"189","line":10,"column":3,"nodeType":"143","messageId":"144","endLine":10,"endColumn":21},{"ruleId":"141","severity":1,"message":"190","line":12,"column":3,"nodeType":"143","messageId":"144","endLine":12,"endColumn":18},{"ruleId":"167","severity":1,"message":"168","line":54,"column":21,"nodeType":"169","messageId":"170","endLine":54,"endColumn":23},{"ruleId":"141","severity":1,"message":"191","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":13},{"ruleId":"141","severity":1,"message":"163","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":26},{"ruleId":"141","severity":1,"message":"142","line":1,"column":28,"nodeType":"143","messageId":"144","endLine":1,"endColumn":36},{"ruleId":"192","severity":1,"message":"193","line":29,"column":11,"nodeType":"166","endLine":33,"endColumn":68},{"ruleId":"141","severity":1,"message":"194","line":15,"column":10,"nodeType":"143","messageId":"144","endLine":15,"endColumn":13},{"ruleId":"167","severity":1,"message":"175","line":32,"column":28,"nodeType":"169","messageId":"170","endLine":32,"endColumn":30},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'Router' is defined but never used.","'Link' is defined but never used.","'fetchContestList' is defined but never used.","'fetchProblemList' is defined but never used.","'fetchUserSubmissions' is defined but never used.","'dispatch' is assigned a value but never used.","'problem' is assigned a value but never used.","'submissions' is assigned a value but never used.","'setSolveCount' is assigned a value but never used.","'ERROR_FETCHING' is defined but never used.","'ERROR_FETCHING_USER_SUBMISSIONS' is defined but never used.","'FETCH_USER_SUBMISSIONS' is defined but never used.","'LOADING_USER_SUBMISSIONS' is defined but never used.","'store' is defined but never used.","'useDispatch' is defined but never used.","'individualContestURL' is assigned a value but never used.","'path' is assigned a value but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterProblem' and 'problemList'. Either include them or remove the dependency array. You can also do a functional update 'setProblemList(p => ...)' if you only need 'problemList' in the 'setProblemList' call.","ArrayExpression",["197"],"Expected '!==' and instead saw '!='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'getProblemUrl' is defined but never used.","'formateDate' is defined but never used.","'charInc' is defined but never used.","'getContestUrl' is defined but never used.","'ReactPaginate' is defined but never used.","'ATTEMPTED_PROBLEMS' is defined but never used.","'SOLVED_PROBLEMS' is defined but never used.","'far' is defined but never used.","React Hook useEffect has missing dependencies: 'contestList' and 'filterContest'. Either include them or remove the dependency array. You can also do a functional update 'setContestList(c => ...)' if you only need 'contestList' in the 'setContestList' call.",["198"],"'ATTEMPTED_CONTESTS' is defined but never used.","'SOLVED_CONTESTS' is defined but never used.","'react' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'act' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: [state, filterState, problemList, filterProblem]",{"range":"203","text":"204"},"Update the dependencies array to be: [state, filterState, contestList, filterContest]",{"range":"205","text":"206"},[3164,3184],"[state, filterState, problemList, filterProblem]",[2300,2320],"[state, filterState, contestList, filterContest]"]