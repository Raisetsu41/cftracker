[{"F:\\web\\react\\codeforces-api\\src\\index.tsx":"1","F:\\web\\react\\codeforces-api\\src\\reportWebVitals.tsx":"2","F:\\web\\react\\codeforces-api\\src\\App.tsx":"3","F:\\web\\react\\codeforces-api\\src\\components\\Menu.tsx":"4","F:\\web\\react\\codeforces-api\\src\\components\\problem\\ProblemPage.tsx":"5","F:\\web\\react\\codeforces-api\\src\\components\\home\\HomePage.tsx":"6","F:\\web\\react\\codeforces-api\\src\\components\\contest\\ContestPage.tsx":"7","F:\\web\\react\\codeforces-api\\src\\components\\problem\\ProblemList.tsx":"8","F:\\web\\react\\codeforces-api\\src\\util\\Pagination.tsx":"9","F:\\web\\react\\codeforces-api\\src\\components\\contest\\ContestList.tsx":"10","F:\\web\\react\\codeforces-api\\src\\util\\constants.ts":"11","F:\\web\\react\\codeforces-api\\src\\util\\bashforces.ts":"12","F:\\web\\react\\codeforces-api\\src\\util\\sortMethods.ts":"13","F:\\web\\react\\codeforces-api\\src\\data\\store.ts":"14","F:\\web\\react\\codeforces-api\\src\\data\\reducers\\fetchReducers.ts":"15","F:\\web\\react\\codeforces-api\\src\\data\\reducers\\userReducers.ts":"16","F:\\web\\react\\codeforces-api\\src\\data\\actions\\fetchActions.ts":"17","F:\\web\\react\\codeforces-api\\src\\data\\actions\\userActions.ts":"18","F:\\web\\react\\codeforces-api\\src\\data\\actions\\types.ts":"19","F:\\web\\react\\codeforces-api\\src\\data\\jsons\\related.ts":"20","F:\\web\\react\\codeforces-api\\src\\data\\reducers\\appReducers.ts":"21","F:\\web\\react\\codeforces-api\\src\\util\\DataTypes\\Submission.ts":"22","F:\\web\\react\\codeforces-api\\src\\util\\DataTypes\\Problem.ts":"23","F:\\web\\react\\codeforces-api\\src\\util\\Comparator.ts":"24","F:\\web\\react\\codeforces-api\\src\\util\\lowerBound.ts":"25"},{"size":767,"mtime":1618398758923,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1617775898144,"results":"28","hashOfConfig":"27"},{"size":1427,"mtime":1620739492876,"results":"29","hashOfConfig":"27"},{"size":3702,"mtime":1620794808465,"results":"30","hashOfConfig":"27"},{"size":17770,"mtime":1620802207287,"results":"31","hashOfConfig":"27"},{"size":1147,"mtime":1618400510901,"results":"32","hashOfConfig":"27"},{"size":13439,"mtime":1620799291803,"results":"33","hashOfConfig":"27"},{"size":1948,"mtime":1618402097817,"results":"34","hashOfConfig":"27"},{"size":1524,"mtime":1617880137841,"results":"35","hashOfConfig":"27"},{"size":6096,"mtime":1620745475834,"results":"36","hashOfConfig":"27"},{"size":410,"mtime":1617879429205,"results":"37","hashOfConfig":"27"},{"size":1669,"mtime":1620794512714,"results":"38","hashOfConfig":"27"},{"size":998,"mtime":1618488169808,"results":"39","hashOfConfig":"27"},{"size":6781,"mtime":1620801047392,"results":"40","hashOfConfig":"27"},{"size":3020,"mtime":1618571435369,"results":"41","hashOfConfig":"27"},{"size":5154,"mtime":1620799978226,"results":"42","hashOfConfig":"27"},{"size":5332,"mtime":1620798907781,"results":"43","hashOfConfig":"27"},{"size":2911,"mtime":1620802353426,"results":"44","hashOfConfig":"27"},{"size":2268,"mtime":1620798999035,"results":"45","hashOfConfig":"27"},{"size":181555,"mtime":1620645259517,"results":"46","hashOfConfig":"27"},{"size":3181,"mtime":1620802025114,"results":"47","hashOfConfig":"27"},{"size":1115,"mtime":1618485329167,"results":"48","hashOfConfig":"27"},{"size":2510,"mtime":1618665333803,"results":"49","hashOfConfig":"27"},{"size":141,"mtime":1618487216532,"results":"50","hashOfConfig":"27"},{"size":586,"mtime":1618579869282,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1flmqtp",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"F:\\web\\react\\codeforces-api\\src\\index.tsx",[],["108","109"],"F:\\web\\react\\codeforces-api\\src\\reportWebVitals.tsx",[],["110","111"],"F:\\web\\react\\codeforces-api\\src\\App.tsx",["112","113","114","115","116","117"],"import \"./App.css\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchContestList,\r\n  fetchProblemList,\r\n  fetchSharedProblemList,\r\n} from \"./data/actions/fetchActions\";\r\n\r\nimport { fetchUserSubmissions } from \"./data/actions/userActions\";\r\n\r\nimport Menu from \"./components/Menu\";\r\nimport ProblemPage from \"./components/problem/ProblemPage\";\r\nimport ContestPage from \"./components/contest/ContestPage\";\r\nimport HomePage from \"./components/home/HomePage\";\r\nimport { PROBLEMS, CONTESTS } from \"./util/constants\";\r\n\r\nfunction App() {\r\n\r\n  useEffect(() => {\r\n    document.body.classList.add(\"bg-dark\");\r\n    document.title = \"CFTracker\";\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App container-fluid bg-dark min-vh-100 d-flex justify-content-between  flex-column\">\r\n      <div className=\"top\">\r\n        <div className=\"menu w-100\">\r\n          <Menu />\r\n        </div>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\" component={HomePage} />\r\n          <Route path={PROBLEMS} component={ProblemPage} />\r\n          <Route strict path={CONTESTS} component={ContestPage} />\r\n        </Switch>\r\n      </div>\r\n      <footer className=\"text-light text-center justify-content-center p-3 w-100 align-self-end\">\r\n        All rights reserved by @Bashem\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","F:\\web\\react\\codeforces-api\\src\\components\\Menu.tsx",["118","119","120","121","122","123"],"F:\\web\\react\\codeforces-api\\src\\components\\problem\\ProblemPage.tsx",["124","125","126","127","128","129"],"F:\\web\\react\\codeforces-api\\src\\components\\home\\HomePage.tsx",["130","131"],"import React, { useEffect,useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { fetchUsers } from \"../../data/actions/userActions\";\r\nimport { CONTESTS } from \"../../util/constants\";\r\n\r\nconst HomePage = (props) => {\r\n\r\n  const [handle, setHandle] = useState(\"\");\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst history = useHistory();\r\n\thistory.push(CONTESTS);\r\n\r\n\tconst submitUser = () => {\r\n\t\tfetchUsers(dispatch,handle);\r\n\t}\r\n\r\n  useEffect(() => {\r\n    // fetchProblemList(dispatch);\r\n    // fetchContestList(dispatch);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n\t\t\t{/* <form\r\n          className=\"form-inline d-flex my-2 my-lg-0\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            submitUser();\r\n          }}>\r\n          <input\r\n            className=\"form-control mr-sm-2\"\r\n            type=\"search\"\r\n            placeholder=\"Handle\"\r\n            aria-label=\"Search\"\r\n            value={handle}\r\n            onChange={(e) => setHandle(e.target.value)}\r\n          />\r\n        </form> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","F:\\web\\react\\codeforces-api\\src\\components\\contest\\ContestPage.tsx",["132","133"],"F:\\web\\react\\codeforces-api\\src\\components\\problem\\ProblemList.tsx",["134","135"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getProblemUrl } from \"../../util/bashforces\";\r\nimport { ATTEMPTED_PROBLEMS, SOLVED_PROBLEMS } from \"../../util/constants\";\r\nimport Problem from \"../../util/DataTypes/Problem\";\r\n\r\ninterface ProblemListProps {\r\n  problems: Problem[];\r\n}\r\n\r\nconst ProblemList = ({ problems }: ProblemListProps): JSX.Element => {\r\n  const state = useSelector((state) => state);\r\n\r\n  const getState = (problem: Problem) => {\r\n    if (state.userSubmissions[SOLVED_PROBLEMS].has(problem.id))\r\n      return SOLVED_PROBLEMS;\r\n    if (state.userSubmissions[ATTEMPTED_PROBLEMS].has(problem.id))\r\n      return ATTEMPTED_PROBLEMS;\r\n    return \"UNSOLVED\";\r\n  };\r\n\r\n  const ProblemCard = (problem: Problem, index: number) => {\r\n    let classes = \"bg-dark\";\r\n    let problemState = getState(problem);\r\n    if (problemState === SOLVED_PROBLEMS) classes = \"bg-success\";\r\n    else if (problemState === ATTEMPTED_PROBLEMS) classes = \"bg-danger\";\r\n    return (\r\n      <tr key={problem.id}>\r\n        <td className={\"id font-weight-bold \" + classes}>{index+1}</td>\r\n        <td className={\"id font-weight-bold \" + classes}>{problem.id}</td>\r\n        <td className={\"name \" + classes}>\r\n          <a\r\n            className=\"text-light text-decoration-none\"\r\n            target=\"_blank\"\r\n            title={problem.tags.toString()}\r\n            href={getProblemUrl(problem.contestId, problem.index)}>\r\n            {problem.name}\r\n          </a>\r\n        </td>\r\n        <td className={\"rating \" + classes}>\r\n          {problem.rating != -1 ? problem.rating : \"Not Rated\"}\r\n        </td>\r\n\r\n        <td className={\"solvedCount \" + classes}>{problem.solvedCount}</td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {problems.map((problem: Problem, index: number) => {\r\n        return ProblemCard(problem, index);\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProblemList;\r\n","F:\\web\\react\\codeforces-api\\src\\util\\Pagination.tsx",[],"F:\\web\\react\\codeforces-api\\src\\components\\contest\\ContestList.tsx",["136"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  getProblemUrl,\r\n  formateDate,\r\n  charInc,\r\n  getContestUrl,\r\n} from \"../../util/bashforces\";\r\nimport { ATTEMPTED_PROBLEMS, SOLVED_PROBLEMS } from \"../../util/constants\";\r\nimport Contest from \"../../util/DataTypes/Contest\";\r\n\r\nconst ContestList = (props) => {\r\n  const state = useSelector((state) => state);\r\n\r\n  const related = state.sharedProblems.problems;\r\n\r\n  const getProblem = (contestId, index) => {\r\n    let l = 0,\r\n      r = state.problemList.problems.length - 1;\r\n    while (l <= r) {\r\n      let mid = l + ((r - l) >> 2);\r\n      if (\r\n        state.problemList.problems[mid].contestId === contestId &&\r\n        state.problemList.problems[mid].index === index\r\n      )\r\n        return state.problemList.problems[mid];\r\n\r\n      if (\r\n        state.problemList.problems[mid].contestId > contestId ||\r\n        (state.problemList.problems[mid].contestId === contestId &&\r\n          state.problemList.problems[mid].index > index)\r\n      )\r\n        r = mid - 1;\r\n      else l = mid + 1;\r\n    }\r\n\r\n    return -1;\r\n  };\r\n\r\n  const getStatus = (id:string, solveStatus:string) => {\r\n    let res = state.userSubmissions[solveStatus].has(id);\r\n    return res;\r\n  };\r\n\r\n  const renderProblem = (problem) => {\r\n    let solved = getStatus(\r\n      problem.id,\r\n      SOLVED_PROBLEMS\r\n    );\r\n    let attempted = getStatus(\r\n      problem.id,\r\n      ATTEMPTED_PROBLEMS\r\n    );\r\n\r\n    let name = problem.name;\r\n    let id = problem.id;\r\n    if (name.length > 10) name = name.substring(0, 9) + \"...\";\r\n\r\n    let className =\r\n      (solved ? \"bg-success\" : attempted ? \"bg-danger\" : \"\") + \" p-1\";\r\n\r\n    return (\r\n      <td className={className} key={id}>\r\n        <a\r\n          className=\"text-light text-decoration-none\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n          tabIndex={0}\r\n          data-bs-toggle=\"tooltip\"\r\n          title={problem.name + \", Rating:\" + problem.rating}\r\n          href={getProblemUrl(problem.contestId, problem.index)}>\r\n          {problem.index + \". \"}\r\n          {name}\r\n        </a>\r\n      </td>\r\n    );\r\n  };\r\n\r\n  const getSharedIndex = (contestId, index) => {\r\n    let l = 0,\r\n      r = related.length - 1;\r\n\r\n    while (l <= r) {\r\n      let mid = l + ((r - l) >> 2);\r\n      if (related[mid].contestId === contestId && related[mid].index === index)\r\n        return mid;\r\n      if (\r\n        related[mid].contestId > contestId ||\r\n        (related[mid].contestId === contestId && related[mid].index > index)\r\n      )\r\n        r = mid - 1;\r\n      else l = mid + 1;\r\n    }\r\n\r\n    return -1;\r\n  };\r\n\r\n  const getProblemsList = (contestId, index, first = true) => {\r\n    let problem = getProblem(contestId, index);\r\n\r\n    let problems = [];\r\n    if (problem === -1) {\r\n      let problem1 = getProblem(contestId, index + \"1\");\r\n      if (problem1 === -1 && first === true) {\r\n        let sharedIndex = getSharedIndex(contestId, index);\r\n        if (sharedIndex != -1) {\r\n          for (let sharedProblem of related[sharedIndex].shared) {\r\n            let currentGetInfo = getProblemsList(\r\n              sharedProblem.contestId,\r\n              sharedProblem.index,\r\n              false\r\n            );\r\n\r\n            if (currentGetInfo.length === 1 && currentGetInfo[0] === -1)\r\n              continue;\r\n            for (let currentProblem of currentGetInfo) {\r\n              let current = { ...currentProblem };\r\n              current.contestId = contestId;\r\n              current.index = current.index.split(\"\");\r\n              current.index[0] = index.charAt(0);\r\n              current.index = current.index.join(\"\");\r\n              current.id = current.contestId.toString() + index;\r\n              problems.push(current);\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        problems.push(problem1);\r\n        for (let c: number = 2; c <= 3; c++) {\r\n          problem1 = getProblem(contestId, index + c.toString());\r\n          if (problem1 === -1) break;\r\n          problems.push(problem1);\r\n        }\r\n      }\r\n    } else problems.push(problem);\r\n\r\n    return problems;\r\n  };\r\n\r\n  const getInfo = (contestId, index) => {\r\n    const EMPTY = \"EMPTY bg-dark\";\r\n\r\n    let problems = getProblemsList(contestId, index);\r\n\r\n    if (problems.length === 0) {\r\n      return <td key={contestId + index} className={EMPTY}></td>;\r\n    }\r\n\r\n    if (problems.length === 1) {\r\n      return renderProblem(problems[0]);\r\n    }\r\n\r\n    if (problems.length === 2) {\r\n      let cnt : number = 0;\r\n\r\n      return (\r\n        <td className=\"p-0\" key={contestId + index.charAt(0)}>\r\n          <table>\r\n            <tbody>\r\n              <tr className=\"inside p-0\" key={contestId + index + cnt++}>\r\n                {problems.map((element) => renderProblem(element))}\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </td>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <td className=\"inside p-0\" key={contestId + index}>\r\n        More than 4\r\n      </td>\r\n    );\r\n  };\r\n\r\n  const contestCard = (contest, index) => {\r\n    return (\r\n      <tr key={contest.id}>\r\n        <th scope=\"row sticky-col\">{index + 1}</th>\r\n        <th scope=\"row\">{contest.id}</th>\r\n        <td>\r\n          <div className=\"name\">\r\n            <a\r\n              className=\"text-light text-decoration-none wrap\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              title={formateDate(contest.startTimeSeconds)}\r\n              href={getContestUrl(contest.id)}>\r\n              {contest.name}\r\n            </a>\r\n          </div>\r\n          {props.filterState.showDate ? (\r\n            <div className=\"time\">{formateDate(contest.startTimeSeconds)}</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </td>\r\n        {[...Array(10)].map((x, i) => {\r\n          return getInfo(contest.id, charInc(\"A\", i));\r\n        })}\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.contestlist.map((contest: Contest, index: number) => {\r\n        return contestCard(contest, index);\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ContestList;\r\n","F:\\web\\react\\codeforces-api\\src\\util\\constants.ts",[],"F:\\web\\react\\codeforces-api\\src\\util\\bashforces.ts",[],"F:\\web\\react\\codeforces-api\\src\\util\\sortMethods.ts",[],"F:\\web\\react\\codeforces-api\\src\\data\\store.ts",["137","138","139","140","141"],"F:\\web\\react\\codeforces-api\\src\\data\\reducers\\fetchReducers.ts",[],"F:\\web\\react\\codeforces-api\\src\\data\\reducers\\userReducers.ts",[],"F:\\web\\react\\codeforces-api\\src\\data\\actions\\fetchActions.ts",["142","143","144"],"F:\\web\\react\\codeforces-api\\src\\data\\actions\\userActions.ts",["145","146"],"F:\\web\\react\\codeforces-api\\src\\data\\actions\\types.ts",[],"F:\\web\\react\\codeforces-api\\src\\data\\jsons\\related.ts",[],"F:\\web\\react\\codeforces-api\\src\\data\\reducers\\appReducers.ts",["147","148","149","150","151"],"F:\\web\\react\\codeforces-api\\src\\util\\DataTypes\\Submission.ts",[],"F:\\web\\react\\codeforces-api\\src\\util\\DataTypes\\Problem.ts",[],"F:\\web\\react\\codeforces-api\\src\\util\\Comparator.ts",[],"F:\\web\\react\\codeforces-api\\src\\util\\lowerBound.ts",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"152","replacedBy":"156"},{"ruleId":"154","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":4,"column":10,"nodeType":"160","messageId":"161","endLine":4,"endColumn":21},{"ruleId":"158","severity":1,"message":"162","line":4,"column":23,"nodeType":"160","messageId":"161","endLine":4,"endColumn":34},{"ruleId":"158","severity":1,"message":"163","line":6,"column":3,"nodeType":"160","messageId":"161","endLine":6,"endColumn":19},{"ruleId":"158","severity":1,"message":"164","line":7,"column":3,"nodeType":"160","messageId":"161","endLine":7,"endColumn":19},{"ruleId":"158","severity":1,"message":"165","line":8,"column":3,"nodeType":"160","messageId":"161","endLine":8,"endColumn":25},{"ruleId":"158","severity":1,"message":"166","line":11,"column":10,"nodeType":"160","messageId":"161","endLine":11,"endColumn":30},{"ruleId":"158","severity":1,"message":"167","line":12,"column":10,"nodeType":"160","messageId":"161","endLine":12,"endColumn":19},{"ruleId":"158","severity":1,"message":"168","line":14,"column":10,"nodeType":"160","messageId":"161","endLine":14,"endColumn":23},{"ruleId":"158","severity":1,"message":"169","line":15,"column":10,"nodeType":"160","messageId":"161","endLine":15,"endColumn":17},{"ruleId":"170","severity":1,"message":"171","line":30,"column":6,"nodeType":"172","endLine":30,"endColumn":8,"suggestions":"173"},{"ruleId":"170","severity":1,"message":"174","line":34,"column":6,"nodeType":"172","endLine":34,"endColumn":22,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":79,"column":13,"nodeType":"178","endLine":85,"endColumn":24},{"ruleId":"158","severity":1,"message":"179","line":59,"column":10,"nodeType":"160","messageId":"161","endLine":59,"endColumn":21},{"ruleId":"170","severity":1,"message":"180","line":124,"column":6,"nodeType":"172","endLine":124,"endColumn":26,"suggestions":"181"},{"ruleId":"158","severity":1,"message":"182","line":146,"column":9,"nodeType":"160","messageId":"161","endLine":146,"endColumn":19},{"ruleId":"183","severity":1,"message":"184","line":308,"column":37,"nodeType":"185","messageId":"186","endLine":308,"endColumn":39},{"ruleId":"183","severity":1,"message":"184","line":342,"column":54,"nodeType":"185","messageId":"186","endLine":342,"endColumn":56},{"ruleId":"183","severity":1,"message":"184","line":365,"column":54,"nodeType":"185","messageId":"186","endLine":365,"endColumn":56},{"ruleId":"158","severity":1,"message":"187","line":9,"column":18,"nodeType":"160","messageId":"161","endLine":9,"endColumn":27},{"ruleId":"158","severity":1,"message":"188","line":15,"column":8,"nodeType":"160","messageId":"161","endLine":15,"endColumn":18},{"ruleId":"170","severity":1,"message":"189","line":91,"column":6,"nodeType":"172","endLine":91,"endColumn":26,"suggestions":"190"},{"ruleId":"183","severity":1,"message":"184","line":271,"column":41,"nodeType":"185","messageId":"186","endLine":271,"endColumn":43},{"ruleId":"191","severity":1,"message":"192","line":32,"column":11,"nodeType":"178","endLine":36,"endColumn":68},{"ruleId":"183","severity":1,"message":"184","line":41,"column":27,"nodeType":"185","messageId":"186","endLine":41,"endColumn":29},{"ruleId":"183","severity":1,"message":"184","line":106,"column":25,"nodeType":"185","messageId":"186","endLine":106,"endColumn":27},{"ruleId":"158","severity":1,"message":"193","line":24,"column":8,"nodeType":"160","messageId":"161","endLine":24,"endColumn":15},{"ruleId":"158","severity":1,"message":"194","line":28,"column":10,"nodeType":"160","messageId":"161","endLine":28,"endColumn":18},{"ruleId":"158","severity":1,"message":"195","line":29,"column":10,"nodeType":"160","messageId":"161","endLine":29,"endColumn":24},{"ruleId":"183","severity":1,"message":"184","line":74,"column":12,"nodeType":"185","messageId":"186","endLine":74,"endColumn":14},{"ruleId":"183","severity":1,"message":"196","line":78,"column":14,"nodeType":"185","messageId":"186","endLine":78,"endColumn":16},{"ruleId":"158","severity":1,"message":"197","line":15,"column":10,"nodeType":"160","messageId":"161","endLine":15,"endColumn":16},{"ruleId":"158","severity":1,"message":"198","line":25,"column":7,"nodeType":"160","messageId":"161","endLine":25,"endColumn":24},{"ruleId":"183","severity":1,"message":"196","line":159,"column":63,"nodeType":"185","messageId":"186","endLine":159,"endColumn":65},{"ruleId":"158","severity":1,"message":"199","line":3,"column":3,"nodeType":"160","messageId":"161","endLine":3,"endColumn":17},{"ruleId":"158","severity":1,"message":"200","line":13,"column":3,"nodeType":"160","messageId":"161","endLine":13,"endColumn":22},{"ruleId":"158","severity":1,"message":"201","line":2,"column":26,"nodeType":"160","messageId":"161","endLine":2,"endColumn":34},{"ruleId":"183","severity":1,"message":"184","line":37,"column":23,"nodeType":"185","messageId":"186","endLine":37,"endColumn":25},{"ruleId":"183","severity":1,"message":"184","line":41,"column":37,"nodeType":"185","messageId":"186","endLine":41,"endColumn":39},{"ruleId":"183","severity":1,"message":"184","line":52,"column":40,"nodeType":"185","messageId":"186","endLine":52,"endColumn":42},{"ruleId":"202","severity":1,"message":"203","line":87,"column":5,"nodeType":"204","messageId":"186","endLine":89,"endColumn":19},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],["205"],["206"],"@typescript-eslint/no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'fetchContestList' is defined but never used.","'fetchProblemList' is defined but never used.","'fetchSharedProblemList' is defined but never used.","'fetchUserSubmissions' is defined but never used.","'RootState' is defined but never used.","'ProblemShared' is defined but never used.","'Verdict' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["207"],"React Hook useEffect has a missing dependency: 'sync'. Either include it or remove the dependency array.",["208"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'showUnrated' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filterProblem', 'history', and 'problemList'. Either include them or remove the dependency array. You can also do a functional update 'setProblemList(p => ...)' if you only need 'problemList' in the 'setProblemList' call.",["209"],"'searchData' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'setHandle' is assigned a value but never used.","'submitUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'contestList', 'filterContest', and 'history'. Either include them or remove the dependency array. You can also do a functional update 'setContestList(c => ...)' if you only need 'contestList' in the 'setContestList' call.",["210"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'Contest' is defined but never used.","'cursorTo' is defined but never used.","'AppReducerType' is defined but never used.","Expected '===' and instead saw '=='.","'result' is defined but never used.","'sharedProblemsURL' is assigned a value but never used.","'getUserInfoURL' is defined but never used.","'ERROR_FETCHING_USER' is defined but never used.","'ErrorLog' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},"Update the dependencies array to be: [dispatch]",{"range":"219","text":"220"},"Update the dependencies array to be: [state.userList, sync]",{"range":"221","text":"222"},"Update the dependencies array to be: [state, filterState, history, problemList, filterProblem]",{"range":"223","text":"224"},"Update the dependencies array to be: [state, filterState, history, contestList, filterContest]",{"range":"225","text":"226"},[1157,1159],"[dispatch]",[1204,1220],"[state.userList, sync]",[4207,4227],"[state, filterState, history, problemList, filterProblem]",[2852,2872],"[state, filterState, history, contestList, filterContest]"]